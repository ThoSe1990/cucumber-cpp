
# the docker image is build for linux/amd64 and pushed to docker hub: 
# docker buildx build --platform linux/amd64 . -t those90/ci-image:1.0
# docker push those90/ci-image:1.0


name: CI

on:
  push:
    branches: [ "**" ]

jobs:
  build-gcc:
    runs-on: ubuntu-latest
    container: those90/ci-image:1.0
    env:
      HOME: /root
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: build
        run: |
          conan install . -of ./build_gcc --build missing 
          cmake -S . -B ./build_gcc -DCMAKE_TOOLCHAIN_FILE=./build_gcc/conan_toolchain.cmake
          ls -la ./gtest
          ls -la ./gtest/test_files
          cat ./gtest/test_paths.hpp
          echo "****"
          pwd
          echo "****"
          cmake --build ./build_gcc -j12
      - name: unittests
        run: ./build_gcc/bin/unittests
      - name: example 
        run: ./build_gcc/bin/example ./examples


  build-clang:
    runs-on: ubuntu-latest
    container: those90/ci-image:1.0
    env:
      HOME: /root
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: build
        run: |
          conan install . -of ./build_clang --build missing -pr clang
          cmake -S . -B ./build_clang -DCMAKE_TOOLCHAIN_FILE=./build_clang/conan_toolchain.cmake -DCMAKE_CXX_COMPILER=clang++-17 -DCMAKE_C_COMPILER=clang-17
          ls -la ./gtest
          ls -la ./gtest/test_files
          cat ./gtest/test_paths.hpp
          cmake --build ./build_clang -j12      
      - name: unittests
        run: ./build_clang/bin/unittests
      - name: examples 
        run: ./build_clang/bin/example ./examples

  WindowsBuild:

    runs-on: windows-latest 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install pip tools
        run: |
          python -m pip install --upgrade pip
          pip install cmake conan

      - name: Initialize Conan
        run: |
          set PATH=%PATH%;C:\hostedtoolcache\windows\Python\3.12.7\x64\Scripts
          conan --version  # Check Conan version
          conan profile detect
          conan profile show 
        

          # powershell -Command "(gc C:\Users\RunnerAdmin\.conan2\profiles\default) -replace 'compiler.cppstd=14', 'compiler.cppstd=20' | Out-File -encoding ASCII C:\Users\RunnerAdmin\.conan2\profiles\default"
          # powershell -Command "(gc C:\Users\RunnerAdmin\.conan2\profiles\default) -replace 'compiler.runtime=dynamic', 'compiler.runtime=static' | Out-File -encoding ASCII C:\Users\RunnerAdmin\.conan2\profiles\default"

      # - name: Conan Install and Build
      #   run: |
      #     set PATH=%PATH%;C:\hostedtoolcache\windows\Python\3.12.7\x64\Scripts
      #     conan install . -of build --build missing
      #     cmake -S . -B ./build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=".\build\conan_toolchain.cmake"
      #     cmake --build ./build --config Release -j6
      #
      # - name: Run Unittests
      #   run: .\build\bin\Release\unittests.exe
      #
      # - name: Run Example
      #   run: |
      #     dir .\build\bin\Release
      #     .\build\bin\Release\example.exe
      #     .\build\bin\Release\example.exe ./examples/features
